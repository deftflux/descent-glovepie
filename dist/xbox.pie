/* xbox.pie
GlovePIE script generated by descent-glovepie
Apache License 2.0
Project Home: https://github.com/deftflux/descent-glovepie
*/



// Initial var states:
if (not var.Initialized) {
    var.ButtonStateA := 0;
    var.ButtonStateB := 0;
    var.ButtonStateX := 0;
    var.ButtonStateY := 0;
    var.ButtonStateUp := 0;
    var.ButtonStateDown := 0;
    var.ButtonStateLeft := 0;
    var.ButtonStateRight := 0;
    var.ButtonStateRightShoulder := 0;
    var.ButtonStateRightTrigger := 0;
    var.ButtonStateLeftThumb := 0;
    var.ButtonStateRightThumb := 0;
    var.ButtonStateLeftTrigger := 0;
    var.ButtonStateLeftShoulder := 0;
    var.ButtonStateBack := 0;
    var.ButtonStateStart := 0;
    var.ShiftState := 1;
    var.ShiftDefault := false;
    var.Initialized := true;
}


// Axis mappings:
PPJoy1.Analog0 := XInput1.Joy1X;
PPJoy1.Analog1 := -XInput1.Joy1Y;
PPJoy1.Analog2 := XInput1.Joy2X;
PPJoy1.Analog3 := XInput1.Joy2Y;


// When shift buttons pressed:

// Back
if (XInput1.Back and var.ButtonStateBack == 0) {
    if (var.ShiftState == 1) {
        var.ShiftState := 2;
        var.ShiftDefault := true;
    } else {
        var.ShiftDefault := false;
    }
    var.ButtonStateBack := var.ShiftState;
}

// Start
if (XInput1.Start and var.ButtonStateStart == 0) {
    if (var.ShiftState == 1) {
        var.ShiftState := 3;
        var.ShiftDefault := true;
    } else {
        var.ShiftDefault := false;
    }
    var.ButtonStateStart := var.ShiftState;
}


// When non-shift buttons pressed:

// A
if (XInput1.A and var.ButtonStateA == 0) {
    var.ButtonStateA := var.ShiftState;
    var.ShiftDefault := false;
}

// B
if (XInput1.B and var.ButtonStateB == 0) {
    var.ButtonStateB := var.ShiftState;
    var.ShiftDefault := false;
}

// X
if (XInput1.X and var.ButtonStateX == 0) {
    var.ButtonStateX := var.ShiftState;
    var.ShiftDefault := false;
}

// Y
if (XInput1.Y and var.ButtonStateY == 0) {
    var.ButtonStateY := var.ShiftState;
    var.ShiftDefault := false;
}

// Up
if (XInput1.Up and var.ButtonStateUp == 0) {
    var.ButtonStateUp := var.ShiftState;
    var.ShiftDefault := false;
}

// Down
if (XInput1.Down and var.ButtonStateDown == 0) {
    var.ButtonStateDown := var.ShiftState;
    var.ShiftDefault := false;
}

// Left
if (XInput1.Left and var.ButtonStateLeft == 0) {
    var.ButtonStateLeft := var.ShiftState;
    var.ShiftDefault := false;
}

// Right
if (XInput1.Right and var.ButtonStateRight == 0) {
    var.ButtonStateRight := var.ShiftState;
    var.ShiftDefault := false;
}

// RightShoulder
if (XInput1.RightShoulder and var.ButtonStateRightShoulder == 0) {
    var.ButtonStateRightShoulder := var.ShiftState;
    var.ShiftDefault := false;
}

// RightTrigger
if (XInput1.RightTrigger and var.ButtonStateRightTrigger == 0) {
    var.ButtonStateRightTrigger := var.ShiftState;
    var.ShiftDefault := false;
}

// LeftThumb
if (XInput1.LeftThumb and var.ButtonStateLeftThumb == 0) {
    var.ButtonStateLeftThumb := var.ShiftState;
    var.ShiftDefault := false;
}

// RightThumb
if (XInput1.RightThumb and var.ButtonStateRightThumb == 0) {
    var.ButtonStateRightThumb := var.ShiftState;
    var.ShiftDefault := false;
}

// LeftTrigger
if (XInput1.LeftTrigger and var.ButtonStateLeftTrigger == 0) {
    var.ButtonStateLeftTrigger := var.ShiftState;
    var.ShiftDefault := false;
}

// LeftShoulder
if (XInput1.LeftShoulder and var.ButtonStateLeftShoulder == 0) {
    var.ButtonStateLeftShoulder := var.ShiftState;
    var.ShiftDefault := false;
}


// Normal button mappings:
Keyboard.Enter := (var.ButtonStateA == 1);
PPJoy1.Digital4 := (var.ButtonStateB == 1);
Keyboard.Space := (var.ButtonStateX == 1);
PPJoy.Digital5 := (var.ButtonStateY == 1);
Keyboard.Up := InSet(var.ButtonStateUp, 1, 2);
Keyboard.Down := InSet(var.ButtonStateDown, 1, 2);
Keyboard.Left := (var.ButtonStateLeft == 1);
Keyboard.Right := (var.ButtonStateRight == 1);
PPJoy1.Digital0 := InSet(var.ButtonStateRightShoulder, 1, 2, 3);
PPJoy1.Digital1 := InSet(var.ButtonStateRightTrigger, 1, 2, 3);
PPJoy1.Digital2 := InSet(var.ButtonStateLeftThumb, 1, 2, 3);
PPJoy1.Digital3 := InSet(var.ButtonStateRightThumb, 1, 2, 3);


// Throttle mapping:
PPJoy1.Analog4 := ((-XInput1.LeftTrigger * (XInput1.LeftTrigger > 0.1)) + (1 * InSet(var.ButtonStateLeftShoulder, 1, 2, 3) * (not (XInput1.LeftTrigger > 0.1))));
PPJoy1.Digital6 := ((XInput1.LeftTrigger > 0.1) and InSet(var.ButtonStateLeftShoulder, 1, 2, 3));


// Shifted button mappings:

// Back+A
if (var.ButtonStateA == 2) {
    var.ButtonStateA := -1;
    Keyboard.Six := true;
    Keyboard.Six := false;
}

// Back+B
if (var.ButtonStateB == 2) {
    var.ButtonStateB := -1;
    Keyboard.Seven := true;
    Keyboard.Seven := false;
}

// Back+X
if (var.ButtonStateX == 2) {
    var.ButtonStateX := -1;
    Keyboard.Nine := true;
    Keyboard.Nine := false;
}

// Back+Y
if (var.ButtonStateY == 2) {
    var.ButtonStateY := -1;
    Keyboard.Nine := true;
    Keyboard.Nine := false;
}

// Back+Left
if (var.ButtonStateLeft == 2) {
    var.ButtonStateLeft := -1;
    Keyboard.Shift := true;
    Keyboard.F1 := true;
    Keyboard.F1 := false;
    Keyboard.Shift := false;
}

// Back+Right
if (var.ButtonStateRight == 2) {
    var.ButtonStateRight := -1;
    Keyboard.Shift := true;
    Keyboard.F2 := true;
    Keyboard.F2 := false;
    Keyboard.Shift := false;
}

// Back+Start
if (var.ButtonStateStart == 2) {
    var.ButtonStateStart := -1;
    Keyboard.Zero := true;
    Keyboard.Zero := false;
}

// Start+A
if (var.ButtonStateA == 3) {
    var.ButtonStateA := -1;
    Keyboard.Alt := true;
    Keyboard.F1 := true;
    Keyboard.F1 := false;
    Keyboard.Alt := false;
}

// Start+B
if (var.ButtonStateB == 3) {
    var.ButtonStateB := -1;
    Keyboard.Alt := true;
    Keyboard.F3 := true;
    Keyboard.F3 := false;
    Keyboard.Alt := false;
}

// Start+X
if (var.ButtonStateX == 3) {
    var.ButtonStateX := -1;
    Keyboard.F2 := true;
    Keyboard.F2 := false;
}

// Start+Y
if (var.ButtonStateY == 3) {
    var.ButtonStateY := -1;
    Keyboard.Tab := true;
    Keyboard.Tab := false;
}

// Start+Up
if (var.ButtonStateUp == 3) {
    var.ButtonStateUp := -1;
    Keyboard.Three := true;
    Keyboard.Three := false;
}

// Start+Down
if (var.ButtonStateDown == 3) {
    var.ButtonStateDown := -1;
    Keyboard.One := true;
    Keyboard.One := false;
}

// Start+Left
if (var.ButtonStateLeft == 3) {
    var.ButtonStateLeft := -1;
    Keyboard.Two := true;
    Keyboard.Two := false;
}

// Start+Right
if (var.ButtonStateRight == 3) {
    var.ButtonStateRight := -1;
    Keyboard.Four := true;
    Keyboard.Four := false;
}

// Start+Back
if (var.ButtonStateBack == 3) {
    var.ButtonStateBack := -1;
    Keyboard.Five := true;
    Keyboard.Five := false;
}


// When non-shift buttons released:
if ((not XInput1.A) and var.ButtonStateA != 0) var.ButtonStateA := 0;
if ((not XInput1.B) and var.ButtonStateB != 0) var.ButtonStateB := 0;
if ((not XInput1.X) and var.ButtonStateX != 0) var.ButtonStateX := 0;
if ((not XInput1.Y) and var.ButtonStateY != 0) var.ButtonStateY := 0;
if ((not XInput1.Up) and var.ButtonStateUp != 0) var.ButtonStateUp := 0;
if ((not XInput1.Down) and var.ButtonStateDown != 0) var.ButtonStateDown := 0;
if ((not XInput1.Left) and var.ButtonStateLeft != 0) var.ButtonStateLeft := 0;
if ((not XInput1.Right) and var.ButtonStateRight != 0) var.ButtonStateRight := 0;
if ((not XInput1.RightShoulder) and var.ButtonStateRightShoulder != 0) var.ButtonStateRightShoulder := 0;
if ((not XInput1.RightTrigger) and var.ButtonStateRightTrigger != 0) var.ButtonStateRightTrigger := 0;
if ((not XInput1.LeftThumb) and var.ButtonStateLeftThumb != 0) var.ButtonStateLeftThumb := 0;
if ((not XInput1.RightThumb) and var.ButtonStateRightThumb != 0) var.ButtonStateRightThumb := 0;
if ((not XInput1.LeftTrigger) and var.ButtonStateLeftTrigger != 0) var.ButtonStateLeftTrigger := 0;
if ((not XInput1.LeftShoulder) and var.ButtonStateLeftShoulder != 0) var.ButtonStateLeftShoulder := 0;


// When shift buttons released:

// Back
if ((not XInput1.Back) and var.ButtonStateBack != 0) {
    if (var.ShiftState == 2) {
        var.ShiftState := 1;
    }
    var.ButtonStateBack := 0;
}

// Start
if ((not XInput1.Start) and var.ButtonStateStart != 0) {
    if (var.ShiftState == 3) {
        var.ShiftState := 1;
        if (var.ShiftDefault) {
            Keyboard.Escape := true;
            Keyboard.Escape := false;
        }
    }
    var.ButtonStateStart := 0;
}


// Debug text:
if (var.PreviousShiftState != var.ShiftState) {
    if (var.ShiftState == 1) debug := "No Shift";
    if (var.ShiftState == 2) debug := "Shift: Back";
    if (var.ShiftState == 3) debug := "Shift: Start";
    var.PreviousShiftState := var.ShiftState;
}